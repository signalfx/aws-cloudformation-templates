#====== DO NOT DEPLOY THIS FILE TO PRODUCTION. =======================================================================================
#====== USE PACKAGED VERSION https://o11y-public.s3.amazonaws.com/aws-cloudformation-templates/release/template_logs_regional.yaml =====
AWSTemplateFormatVersion: '2010-09-09'
Description: Splunk AWS Logs Collector lambda and permissions

Parameters:
  SplunkAPIKey:
    Type: String
    NoEcho: true
    Description: "Splunk Observability Access Token. You should have copied it in the previous step from the integration configuration. You can also find it in Organization Settings --> Access Tokens."
  SplunkLogIngestUrl:
    Type: String
    Description: "Real-time Data Ingest url with an additional suffix 'v1/log'. Real-time Data Ingest url can be found in your Profile --> Account Settings --> Endpoints."
  SplunkMetricIngestUrl:
    Type: String
    Description: "Real-time Data Ingest url can be found in your Profile --> Account Settings --> Endpoints."
  UseHostedLambdaDeploymentPackage:
    Type: String
    Default: "true"
    Description: "Change this to false if you are deploying to Gov or China region. That will make it possible for you to pass a custom location of the zip archive in other parameters."
  LambdaDeploymentPackageS3Bucket:
    Type: String
    Description: "S3 bucket where aws-log-collector lambda deployment package is stored. Must be in the same region as this deployment. You should set this only in Gov and China."
    Default: ""
  LambdaDeploymentPackageS3Key:
    Type: String
    Description: "Aws-log-collector lambda deployment package path (key) in S3. You should set this only in Gov and China."
    Default: ""

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      -
        Label:
          default: Required Parameters
        Parameters:
          - SplunkAPIKey
          - SplunkLogIngestUrl
          - SplunkMetricIngestUrl
      -
        Label:
          default: (Optional) Lambda Deployment Package location. You need to modify this section if you're deploying to Gov or China regions.
        Parameters:
          - UseHostedLambdaDeploymentPackage
          - LambdaDeploymentPackageS3Bucket
          - LambdaDeploymentPackageS3Key
    ParameterLabels:
      SplunkAPIKey:
        default: "Access Token"
      SplunkLogIngestUrl:
        default: "Real-time Data Ingest endpoint with log path"
      SplunkMetricIngestUrl:
        default: "Real-time Data Ingest endpoint"
      UseHostedLambdaDeploymentPackage:
        default: "Use Splunk-hosted archive with lambda code"
      LambdaDeploymentPackageS3Bucket:
        default: "S3Bucket with the archive"
      LambdaDeploymentPackageS3Key:
        default: "Path of the archive in the bucket"

Conditions:
  UseHostedDeploymentPackageCondition:
    !Equals [!Ref UseHostedLambdaDeploymentPackage, "true"]

Resources:
  SplunkAwsLogsCollector:
    Type: AWS::Lambda::Function
    Properties:
      Description: Splunk AWS Log Collector
      FunctionName: 'splunk-aws-logs-collector'
      Runtime: python3.7
      Timeout: 60
      Code:
        S3Bucket: !If [UseHostedDeploymentPackageCondition, !Sub 'o11y-public-${AWS::Region}', !Ref LambdaDeploymentPackageS3Bucket ]
        S3Key: !If [UseHostedDeploymentPackageCondition, 'aws-log-collector/aws-log-collector.release.zip', !Ref LambdaDeploymentPackageS3Key ]
      Handler: function.lambda_handler
      Environment:
        Variables:
          SPLUNK_API_KEY: !Ref SplunkAPIKey
          SPLUNK_LOG_URL: !Ref SplunkLogIngestUrl
          SPLUNK_METRIC_URL: !Ref SplunkMetricIngestUrl
      Role: !Sub 'arn:aws:iam::${AWS::AccountId}:role/splunk-log-collector'
      Tags:
        - Key: splunk-log-collector-id
          Value: !Sub '${AWS::Region}'

  AllLogsCanInvokeLogCollector:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref SplunkAwsLogsCollector
      Action: 'lambda:InvokeFunction'
      Principal: !Sub 'logs.${AWS::Region}.amazonaws.com'
      SourceAccount: !Ref 'AWS::AccountId'
      SourceArn: !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:*:*'

  AllS3BucketsEventsCanInvokeLogCollector:
    Type: AWS::Lambda::Permission
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName: !Ref SplunkAwsLogsCollector
      Principal: s3.amazonaws.com
      SourceAccount: !Ref 'AWS::AccountId'
      SourceArn: 'arn:aws:s3:::*'

Outputs:
  LambdaArn:
    Value:
      Fn::GetAtt:
        - SplunkAwsLogsCollector
        - Arn
