#====== DO NOT DEPLOY THIS FILE TO PRODUCTION. =======================================================================================
#====== USE PACKAGED VERSION https://o11y-public.s3.amazonaws.com/aws-cloudformation-templates/release/template_logs_regional.yaml =====
AWSTemplateFormatVersion: '2010-09-09'
Description: Splunk AWS Logs Collector lambda and permissions

Parameters:
  SplunkAccessToken:
    Type: String
    NoEcho: true
    Description: "Copy your Splunk Observability access token with INGEST authorization scope from Settings > Access Tokens."
  SplunkIngestUrl:
    Type: String
    Description: "Find the real-time data ingest URL in Profile > Account Settings > Endpoints. Note: do NOT include endpoint path here: for instance use https://ingest.us1.signalfx.com instead of https://ingest.us1.signalfx.com/v1/log."
  RedactionRule:
    Type: String
    Description: "Replace text matching the supplied regular expression with redaction rule replacement."
    Default: ""
  RedactionRuleReplacement:
    Type: String
    Description: "Replace text matching the redaction rule with the following text."
    Default: "**REDACTED**"
  IncludeLogFields:
    Type: String
    Description: "If this is set to \"false\", the function will forward only raw log line from the source. If set to \"true\", the function will forward both the raw log line and fields it parsed out from the line. The default value of \"false\" is meant to reduce log volume"
    Default: "false"
  UseHostedLambdaDeploymentPackage:
    Type: String
    Default: "true"
    Description: "Change this to false if you are deploying to Gov or China regions to pass a custom location of the zip archive in other parameters."
  LambdaDeploymentPackageS3Bucket:
    Type: String
    Description: "Enter the S3 bucket where the aws-log-collector lambda deployment package is stored. It must be in the same region as this deployment. Set the S3 bucket only for Gov and China regions. For example, if the ARN of your archive is \"arn:aws:s3::::my-bucket/my-folder/aws-log-collector.zip\", the value of this parameter is \"my-bucket\"."
    Default: "Set_for_Gov_and_China_regions_leave_blank_otherwise"
  LambdaDeploymentPackageS3Key:
    Type: String
    Description: "Aws-log-collector lambda deployment package path (key) in S3. Set this only in Gov and China regions. For example, if the ARN of your archive is \"arn:aws:s3::::my-bucket/my-folder/aws-log-collector.zip\", the value of this parameter is \"my-folder/aws-log-collector.zip\"."
    Default: "Set_for_Gov_and_China_regions_leave_blank_otherwise"

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      -
        Label:
          default: Required Parameters
        Parameters:
          - SplunkAccessToken
          - SplunkIngestUrl
      -
        Label:
          default: (Optional) Sensitive data redaction
        Parameters:
          - RedactionRule
          - RedactionRuleReplacement
      -
        Label:
          default: (Optional) Additional fields from S3 log files
        Parameters:
          - IncludeLogFields
      -
        Label:
          default: (Optional) Lambda deployment package location. Modify this section if deploying to Gov or China regions.
        Parameters:
          - UseHostedLambdaDeploymentPackage
          - LambdaDeploymentPackageS3Bucket
          - LambdaDeploymentPackageS3Key
    ParameterLabels:
      SplunkAccessToken:
        default: "Access token"
      SplunkIngestUrl:
        default: "Real-time data ingest endpoint"
      RedactionRule:
        default: "Redaction rule"
      RedactionRuleReplacement:
        default: "Redaction rule replacement"
      IncludeLogFields:
        default: "Include log fields"
      UseHostedLambdaDeploymentPackage:
        default: "Use Splunk-hosted archive with lambda code"
      LambdaDeploymentPackageS3Bucket:
        default: "S3 Bucket with the archive"
      LambdaDeploymentPackageS3Key:
        default: "Path of the archive in the bucket"

Conditions:
  UseHostedDeploymentPackageCondition:
    !Equals [!Ref UseHostedLambdaDeploymentPackage, "true"]

Resources:
  SplunkAwsLogsCollectorRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub 'splunk-log-collector-${AWS::Region}'
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess
      Policies:
        - PolicyName: SplunkAwsLogsCollectorRolePolicyTag
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - 'tag:GetResources'
                Resource: '*'
                Sid: AWSGetTagsOfResources
        - PolicyName: SplunkAwsLogsCollectorRolePolicyS3
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - 's3:GetObject'
                Resource: '*'
                Sid: GetS3LogObjects

  SplunkAwsLogsCollector:
    Type: AWS::Lambda::Function
    Properties:
      Description: Splunk AWS Log Collector
      FunctionName: 'splunk-aws-logs-collector'
      Runtime: python3.11
      Timeout: 60
      Code:
        S3Bucket: !If [UseHostedDeploymentPackageCondition, !Sub 'o11y-public-${AWS::Region}', !Ref LambdaDeploymentPackageS3Bucket ]
        S3Key: !If [UseHostedDeploymentPackageCondition, 'aws-log-collector/aws-log-collector.release.zip', !Ref LambdaDeploymentPackageS3Key ]
      Handler: function.lambda_handler
      Environment:
        Variables:
          SPLUNK_API_KEY: !Ref SplunkAccessToken
          SPLUNK_LOG_URL: !Sub '${SplunkIngestUrl}/v1/log'
          SPLUNK_METRIC_URL: !Ref SplunkIngestUrl
          REDACTION_RULE: !Ref RedactionRule
          REDACTION_RULE_REPLACEMENT: !Ref RedactionRuleReplacement
          INCLUDE_LOG_FIELDS: !Ref IncludeLogFields
      Role: !GetAtt SplunkAwsLogsCollectorRole.Arn
      Tags:
        - Key: splunk-log-collector-id
          Value: !Sub '${AWS::Region}'

  AllLogsCanInvokeLogCollector:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref SplunkAwsLogsCollector
      Action: 'lambda:InvokeFunction'
      Principal: !Sub 'logs.${AWS::Region}.amazonaws.com'
      SourceAccount: !Ref 'AWS::AccountId'
      SourceArn: !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:*:*'

  AllS3BucketsEventsCanInvokeLogCollector:
    Type: AWS::Lambda::Permission
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName: !Ref SplunkAwsLogsCollector
      Principal: s3.amazonaws.com
      SourceAccount: !Ref 'AWS::AccountId'
      SourceArn: 'arn:aws:s3:::*'
